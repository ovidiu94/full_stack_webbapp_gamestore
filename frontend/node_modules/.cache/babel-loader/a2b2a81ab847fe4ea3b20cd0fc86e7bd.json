{"ast":null,"code":"import axios from \"axios\";\nexport const getAllGames = () => async dispatch => {\n  dispatch({\n    type: 'GET_GAMES_REQUEST'\n  });\n\n  try {\n    const response = await axios.get('/api/games/getallgames');\n    console.log(response);\n    dispatch({\n      type: 'GET_GAMES_SUCCESS',\n      payload: response.data\n    });\n  } catch (error) {\n    dispatch({\n      type: 'GET_GAMES_FAILED',\n      payload: error\n    });\n  }\n};\nexport const filterGames = (searchkey, category) => async dispatch => {\n  var filterGames;\n  dispatch({\n    type: 'GET_GAMES_REQUEST'\n  });\n\n  try {\n    const response = await axios.get('/api/games/getallgames');\n    filterGames = response.data.filter(game => game.name.toLowerCase().include(searchkey));\n    dispatch({\n      type: 'GET_GAMES_SUCCESS',\n      payload: response.data\n    });\n  } catch (error) {\n    dispatch({\n      type: 'GET_GAMES_FAILED',\n      payload: error\n    });\n  }\n};","map":{"version":3,"sources":["D:/GameStore/frontend/src/actions/gameActions.js"],"names":["axios","getAllGames","dispatch","type","response","get","console","log","payload","data","error","filterGames","searchkey","category","filter","game","name","toLowerCase","include"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,WAAW,GAAC,MAAI,MAAMC,QAAN,IAAgB;AAEzCA,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAC;AAAN,GAAD,CAAR;;AAEA,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAU,wBAAV,CAAvB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACAF,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAC,mBAAN;AAA2BK,MAAAA,OAAO,EAAEJ,QAAQ,CAACK;AAA7C,KAAD,CAAR;AAEH,GALD,CAKE,OAAOC,KAAP,EAAc;AACZR,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAC,kBAAN;AAA0BK,MAAAA,OAAO,EAAGE;AAApC,KAAD,CAAR;AAEH;AACJ,CAbM;AAeP,OAAO,MAAMC,WAAW,GAAC,CAACC,SAAD,EAAaC,QAAb,KAAwB,MAAMX,QAAN,IAAgB;AAC7D,MAAIS,WAAJ;AACAT,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAC;AAAN,GAAD,CAAR;;AAEA,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAU,wBAAV,CAAvB;AACAM,IAAAA,WAAW,GAAGP,QAAQ,CAACK,IAAT,CAAcK,MAAd,CAAqBC,IAAI,IAAEA,IAAI,CAACC,IAAL,CAAUC,WAAV,GAAwBC,OAAxB,CAAgCN,SAAhC,CAA3B,CAAd;AACAV,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAC,mBAAN;AAA2BK,MAAAA,OAAO,EAAEJ,QAAQ,CAACK;AAA7C,KAAD,CAAR;AAEH,GALD,CAKE,OAAOC,KAAP,EAAc;AACZR,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAC,kBAAN;AAA0BK,MAAAA,OAAO,EAAGE;AAApC,KAAD,CAAR;AAEH;AACJ,CAbM","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const getAllGames=()=>async dispatch=>{\r\n\r\n    dispatch({type:'GET_GAMES_REQUEST'})\r\n\r\n    try {\r\n        const response = await axios.get('/api/games/getallgames')\r\n        console.log(response);\r\n        dispatch({type:'GET_GAMES_SUCCESS', payload: response.data})\r\n        \r\n    } catch (error) {\r\n        dispatch({type:'GET_GAMES_FAILED', payload : error})\r\n        \r\n    }\r\n}\r\n\r\nexport const filterGames=(searchkey , category)=>async dispatch=>{\r\n    var filterGames ;\r\n    dispatch({type:'GET_GAMES_REQUEST'})\r\n\r\n    try {\r\n        const response = await axios.get('/api/games/getallgames')\r\n        filterGames = response.data.filter(game=>game.name.toLowerCase().include(searchkey));\r\n        dispatch({type:'GET_GAMES_SUCCESS', payload: response.data})\r\n        \r\n    } catch (error) {\r\n        dispatch({type:'GET_GAMES_FAILED', payload : error})\r\n        \r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}